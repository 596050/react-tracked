(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{109:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return p}));var a=n(0),r=n.n(a),s=r.a.createContext({}),c=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},i=function(e){var t=c(e.components);return r.a.createElement(s.Provider,{value:t},e.children)};var o="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,o=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),d=c(n),p=a,l=d[i+"."+p]||d[p]||u[p]||s;return n?r.a.createElement(l,Object.assign({},{ref:t},o,{components:n})):r.a.createElement(l,Object.assign({},{ref:t},o))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,c=new Array(s);c[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[o]="string"==typeof e?e:a,c[1]=i;for(var p=2;p<s;p++)c[p]=n[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));n(0);var a=n(109);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}const s={id:"recipes",title:"Recipes",sidebar_label:"Recipes"},c=[{value:"Recipes for createContainer",id:"recipes-for-createcontainer",children:[{value:"useReducer (props)",id:"usereducer-props",children:[]},{value:"useReducer (embedded)",id:"usereducer-embedded",children:[]},{value:"useState (props)",id:"usestate-props",children:[]},{value:"useState (empty object)",id:"usestate-empty-object",children:[]},{value:"useState (custom actions)",id:"usestate-custom-actions",children:[]},{value:"useReducer (with persistence)",id:"usereducer-with-persistence",children:[]},{value:"useState (with propState)",id:"usestate-with-propstate",children:[]}]},{value:"Recipes for useTrackedState and useTracked",id:"recipes-for-usetrackedstate-and-usetracked",children:[{value:"useTrackedSelector",id:"usetrackedselector",children:[]},{value:"useTrackedByName (based on useState)",id:"usetrackedbyname-based-on-usestate",children:[]},{value:"useTrackedWithImmer (based on useState)",id:"usetrackedwithimmer-based-on-usestate",children:[]}]},{value:"Recipes for useUpdate (useDispatch)",id:"recipes-for-useupdate-usedispatch",children:[{value:"useSafeDispatch",id:"usesafedispatch",children:[]}]}],i={rightToc:c},o="wrapper";function u({components:e,...t}){return Object(a.b)(o,r({},i,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"React Tracked provides a primitive API,\nand there are various ways to use it for apps."),Object(a.b)("h2",{id:"recipes-for-createcontainer"},"Recipes for createContainer"),Object(a.b)("p",null,"The argument ",Object(a.b)("inlineCode",{parentName:"p"},"useValue")," in ",Object(a.b)("inlineCode",{parentName:"p"},"createContainer")," is so flexible\nand there are various usages."),Object(a.b)("h3",{id:"usereducer-props"},"useReducer (props)"),Object(a.b)("p",null,"This is the most typical usage.\nYou define a generic reducer and pass ",Object(a.b)("inlineCode",{parentName:"p"},"reducer")," and ",Object(a.b)("inlineCode",{parentName:"p"},"initialState")," as props."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(({ reducer, initialState, init }) => useReducer(reducer, initialState, init));\n\nconst reducer = ...;\n\nconst App = ({ initialState }) => (\n  <Provider reducer={reducer} initialState={initialState}>\n    ...\n  </Provider>\n);\n")),Object(a.b)("h3",{id:"usereducer-embedded"},"useReducer (embedded)"),Object(a.b)("p",null,"For most cases, you would have a static reducer.\nIn this case, define useValue with the reducer in advance.\nThe ",Object(a.b)("inlineCode",{parentName:"p"},"initialState")," can be defined in useValue like the following example,\nor can be taken from props: ",Object(a.b)("inlineCode",{parentName:"p"},"({ initialState }) => useReducer(...)")),Object(a.b)("p",null,"This is good for TypeScript because the hooks returned by ",Object(a.b)("inlineCode",{parentName:"p"},"createContainer")," is already typed."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const reducer = ...;\nconst initialState = ...;\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(() => useReducer(reducer, initialState));\n\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),Object(a.b)("h3",{id:"usestate-props"},"useState (props)"),Object(a.b)("p",null,"If you don't need reducer, useState would be simpler."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(({ initialState }) => useState(initialState);\n\n\nconst App = ({ initialState }) => (\n  <Provider initialState={initialState}>\n    ...\n  </Provider>\n);\n")),Object(a.b)("h3",{id:"usestate-empty-object"},"useState (empty object)"),Object(a.b)("p",null,"You could even start with completely an empty object."),Object(a.b)("p",null,"This might not be TypeScript friendly. Although, you could do this: ",Object(a.b)("inlineCode",{parentName:"p"},"useState<State>({})")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(() => useState({});\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),Object(a.b)("h3",{id:"usestate-custom-actions"},"useState (custom actions)"),Object(a.b)("p",null,"You can also use a custom hook.\nThe ",Object(a.b)("inlineCode",{parentName:"p"},"update")," can be anything, so for example it can be a set of action functions."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const useValue = () => {\n  const [state, setState] = useState({ count1: 0, count2: 0 });\n  const increment1 = useCallback(() => {\n    setState(s => ({ ...s, count1: s.count1 + 1 }));\n  }, [setState]);\n  const increment2 = useCallback(() => {\n    setState(s => ({ ...s, count2: s.count2 + 2 }));\n  }, [setState]);\n  const actions = useMemo(() => (\n    { increment1, increment2 },\n  ), [increment1, increment2]);\n  return [state, actions];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),Object(a.b)("h3",{id:"usereducer-with-persistence"},"useReducer (with persistence)"),Object(a.b)("p",null,"Here's how to persist state in localStorage."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const reducer = ...;\nconst initialState = ...; // used only if localStorage is empty.\nconst storageKey = 'persistedState';\n\nconst init = () => {\n  let preloadedState;\n  try {\n    preloadedState =  JSON.parse(window.localStorage.getItem(storageKey));\n    // validate preloadedState if necessary\n  } catch (e) {\n    // ignore\n  }\n  return preloadedState || initialState;\n};\n\nconst useValue = () => {\n  const [state, dispatch] = useReducer(reducer, null, init);\n  useEffect(() => {\n    window.localStorage.setItem(storageKey, JSON.stringify(state));\n  }, [state]);\n  return [state, dispatch];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),Object(a.b)("p",null,"Using async storage is a bit tricky.\nSee ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/dai-shi/react-tracked/issues/8#issuecomment-548095476"}),"the thread")," for an example."),Object(a.b)("h3",{id:"usestate-with-propstate"},"useState (with propState)"),Object(a.b)("p",null,"If you already have a state and would like to use Provider with it,\nyou can sync a container state with a state from props."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const useValue = ({ propState }) => {\n  const [state, setState] = useState(propState);\n  useEffect(() => { // or useLayoutEffect\n    setState(propState);\n  }, [propState]);\n  return [state, setState];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\nconst App = ({ propState }) => (\n  <Provider propState={propState}>\n    ...\n  </Provider>\n);\n")),Object(a.b)("p",null,"Note that ",Object(a.b)("inlineCode",{parentName:"p"},"propState")," has to be updated immutably."),Object(a.b)("h2",{id:"recipes-for-usetrackedstate-and-usetracked"},"Recipes for useTrackedState and useTracked"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"useTrackedState")," and ",Object(a.b)("inlineCode",{parentName:"p"},"useTracked")," hooks are useful as is,\nbut new hooks can also be created based on them."),Object(a.b)("h3",{id:"usetrackedselector"},"useTrackedSelector"),Object(a.b)("p",null,"Selector interface is useful to share selection logic.\nYou can create a selector hook with state usage tracking very easily."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const useTrackedSelector = selector => selector(useTrackedState());\n")),Object(a.b)("p",null,"Note: This is different from ",Object(a.b)("inlineCode",{parentName:"p"},"useSelector")," which has no tracking support\nand triggers re-render based on the ref equality of selected value."),Object(a.b)("h3",{id:"usetrackedbyname-based-on-usestate"},"useTrackedByName (based on useState)"),Object(a.b)("p",null,"Sometimes, you might want to select a state by its property name.\nHere's a custom hook to return a tuple ",Object(a.b)("inlineCode",{parentName:"p"},"[value, setValue]")," selected by a name."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"const useTrackedByName = (name) => {\n  const [state, setState] = useTracked();\n  const update = useCallback((newVal) => {\n    setState(oldVal => ({\n      ...oldVal,\n      [name]: typeof newVal === 'function' ? newVal(oldVal[name]) : newVal,\n    }));\n  }, [setState, name]);\n  return [state[name], update];\n};\n")),Object(a.b)("h3",{id:"usetrackedwithimmer-based-on-usestate"},"useTrackedWithImmer (based on useState)"),Object(a.b)("p",null,"Updating a property deep in a state object is troublesome.\nHere's a custom hook to use ",Object(a.b)("a",r({parentName:"p"},{href:"https://github.com/immerjs/immer"}),"immer")," for setState."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"import produce from 'immer';\n\nconst useTrackedWithImmer = () => {\n  const [state, setState] = useTracked();\n  const update = useCallback((updater) => {\n    setState(oldVal => produce(oldVal, updater));\n  }, [setState]);\n  return [state, update];\n};\n")),Object(a.b)("p",null,"Note: This can also be done at ",Object(a.b)("inlineCode",{parentName:"p"},"createContainer"),"."),Object(a.b)("h2",{id:"recipes-for-useupdate-usedispatch"},"Recipes for useUpdate (useDispatch)"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"useUpdate")," simply returns the second item\nin a tuple returned by ",Object(a.b)("inlineCode",{parentName:"p"},"useState")," or ",Object(a.b)("inlineCode",{parentName:"p"},"useReducer"),".\nIt can also be extended as a custom hook."),Object(a.b)("h3",{id:"usesafedispatch"},"useSafeDispatch"),Object(a.b)("p",null,"This is a modified version of useDispatch that calls ",Object(a.b)("inlineCode",{parentName:"p"},"getUntrackedObject"),"\nrecursively on an action object before dispatching it."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-javascript"}),"import { getUntrackedObject } from 'react-tracked';\n\nconst untrackDeep = (obj) => {\n  if (typeof obj !== 'object' || obj === null) return obj;\n  const untrackedObj = getUntrackedObject(obj);\n  if (untrackedObj !== null) return untrackedObj;\n  const newObj = {};\n  let modified = false;\n  Object.entries(obj).forEach(([k, v]) => {\n    newObj[k] = untrackDeep(v);\n    if (newObj[k] !== null) {\n      modified = true;\n    } else {\n      newObj[k] = v;\n    }\n  });\n  return modified ? newObj : obj;\n};\n\nconst useSafeDispatch = () => {\n  const dispatch = useDispatch();\n  return useCallback((action) => {\n    dispatch(untrackDeep(action));\n  }, [dispatch]);\n};\n")))}u.isMDXComponent=!0}}]);