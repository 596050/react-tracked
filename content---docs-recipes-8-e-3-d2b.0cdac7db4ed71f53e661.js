(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{41:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"rightToc",(function(){return o})),t.d(n,"default",(function(){return p}));t(0);var r=t(51);function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c={id:"recipes",title:"Recipes",sidebar_label:"Recipes"},o=[{value:"useReducer (props)",id:"usereducer-props",children:[]},{value:"useReducer (embedded)",id:"usereducer-embedded",children:[]},{value:"useState (props)",id:"usestate-props",children:[]},{value:"useState (empty object)",id:"usestate-empty-object",children:[]},{value:"useState (custom actions)",id:"usestate-custom-actions",children:[]}],s={rightToc:o},u="wrapper";function p(e){var n=e.components,t=i(e,["components"]);return Object(r.b)(u,a({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The argument ",Object(r.b)("inlineCode",{parentName:"p"},"useValue")," in ",Object(r.b)("inlineCode",{parentName:"p"},"createContainer")," is so flexible\nand there are various usages."),Object(r.b)("h2",{id:"usereducer-props"},"useReducer (props)"),Object(r.b)("p",null,"This is the most typical usage.\nYou define a generic reducer and pass ",Object(r.b)("inlineCode",{parentName:"p"},"reducer")," and ",Object(r.b)("inlineCode",{parentName:"p"},"initialState")," as props."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(({ reducer, initialState, init }) => useReducer(reducer, initialState, init));\n\nconst reducer = ...;\n\nconst App = ({ initialState }) => (\n  <Provider reducer={reducer} initialState={initialState}>\n    ...\n  </Provider>\n);\n")),Object(r.b)("h2",{id:"usereducer-embedded"},"useReducer (embedded)"),Object(r.b)("p",null,"For most cases, you would have a static reducer.\nIn this case, define useValue with the reducer in advance.\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"initialState")," can be defined in useValue like the following example,\nor can be taken from props: ",Object(r.b)("inlineCode",{parentName:"p"},"({ initialState }) => useReducer(...)")),Object(r.b)("p",null,"This is good for TypeScript because the hooks returned by ",Object(r.b)("inlineCode",{parentName:"p"},"createContainer")," is already typed."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"const reducer = ...;\nconst initialState = ...;\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(() => useReducer(reducer, initialState));\n\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),Object(r.b)("h2",{id:"usestate-props"},"useState (props)"),Object(r.b)("p",null,"If you don't need reducer, useState would be simpler."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(({ initialState }) => useState(initialState);\n\n\nconst App = ({ initialState }) => (\n  <Provider initialState={initialState}>\n    ...\n  </Provider>\n);\n")),Object(r.b)("h2",{id:"usestate-empty-object"},"useState (empty object)"),Object(r.b)("p",null,"You could even start with completely an empty object."),Object(r.b)("p",null,"This might not be TypeScript friendly. Although, you could do this: ",Object(r.b)("inlineCode",{parentName:"p"},"useState<State>({})")),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"const {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(() => useState({});\n\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")),Object(r.b)("h2",{id:"usestate-custom-actions"},"useState (custom actions)"),Object(r.b)("p",null,"Finally, you can use a custom hook.\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"update")," can be anything, so for example it can be a set of action functions."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-javascript"}),"const useValue = () => {\n  const [state, setState] = useState({ count1: 0, count2: 0 });\n  const increment1 = () => {\n    setCount(s => ({ ...s, count1: s.count1 + 1 });\n  };\n  const increment2 = () => {\n    setCount(s => ({ ...s, count2: s.count2 + 2 });\n  };\n  return [count, { increment1, increment2 }];\n};\n\nconst {\n  Provider,\n  useTracked,\n  // ...\n} = createContainer(useValue);\n\n\nconst App = () => (\n  <Provider>\n    ...\n  </Provider>\n);\n")))}p.isMDXComponent=!0}}]);