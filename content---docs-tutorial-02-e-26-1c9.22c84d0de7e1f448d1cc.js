(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{51:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return a})),o.d(t,"rightToc",(function(){return c})),o.d(t,"default",(function(){return l}));o(0);var n=o(59);function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e}).apply(this,arguments)}function r(e,t){if(null==e)return{};var o,n,s=function(e,t){if(null==e)return{};var o,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(s[o]=e[o]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(s[o]=e[o])}return s}var a={id:"tutorial-02",title:"Tutorial - ToDo App with useState",sidebar_label:"ToDo App (useState)"},c=[{value:"src/components/App.js",id:"srccomponentsappjs",children:[]},{value:"src/store.js",id:"srcstorejs",children:[]},{value:"src/hooks/useTodoList.js",id:"srchooksusetodolistjs",children:[]},{value:"src/hooks/useAddTodo.js",id:"srchooksuseaddtodojs",children:[]},{value:"src/hooks/useChangeTodo.js",id:"srchooksusechangetodojs",children:[]},{value:"src/hooks/useClearAllNotes.js",id:"srchooksuseclearallnotesjs",children:[]},{value:"src/hooks/useDeleteTodo.js",id:"srchooksusedeletetodojs",children:[]},{value:"src/hooks/useToogleTodo.js",id:"srchooksusetoogletodojs",children:[]},{value:"src/components/TodoList.js",id:"srccomponentstodolistjs",children:[]},{value:"src/components/TodoItem.js",id:"srccomponentstodoitemjs",children:[]},{value:"src/components/NewTodo.js",id:"srccomponentsnewtodojs",children:[]},{value:"src/utils.js",id:"srcutilsjs",children:[]},{value:"CodeSandbox",id:"codesandbox",children:[]}],i={rightToc:c},d="wrapper";function l(e){var t=e.components,o=r(e,["components"]);return Object(n.b)(d,s({},i,o,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"This tutorial shows example code with useState and ",Object(n.b)("a",s({parentName:"p"},{href:"https://immerjs.github.io/immer/"}),"Immer"),"."),Object(n.b)("h2",{id:"srccomponentsappjs"},"src/components/App.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import * as React from 'react';\n\nimport { Provider } from './store';\nimport TodoList from './TodoList';\n\nconst App: React.FC = () => (\n  <Provider>\n    <TodoList />\n  </Provider>\n);\n\nexport default App;\n")),Object(n.b)("p",null,"This is the root component.\nIt wraps TodoList with Provider."),Object(n.b)("h2",{id:"srcstorejs"},"src/store.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useState, useCallback } from 'react';\nimport { createContainer } from 'react-tracked';\nimport produce from 'immer';\n\nexport type TodoType = {\n  id: number;\n  title: string;\n  note?: string;\n  completed?: boolean;\n};\n\nexport type State = {\n  todos: TodoType[];\n};\n\nconst initialState: State = {\n  todos: [\n    { id: 1, title: 'Wash dishes' },\n    { id: 2, title: 'Study JS' },\n    { id: 3, title: 'Buy ticket' },\n  ],\n};\n\nconst useValue = () => useState(initialState);\n\nconst { Provider, useTrackedState, useUpdate: useSetState } = createContainer(\n  useValue\n);\n\nconst useSetDraft = () => {\n  const setState = useSetState();\n  return useCallback(\n    draftUpdater => {\n      setState(produce(draftUpdater));\n    },\n    [setState]\n  );\n};\n\nexport { Provider, useTrackedState, useSetDraft };\n")),Object(n.b)("p",null,"The store is created by useState.\nuseUpdated is renamed to useSetState,\nand based on it, useSetDraft with Immer is exported."),Object(n.b)("h2",{id:"srchooksusetodolistjs"},"src/hooks/useTodoList.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useTrackedState } from '../store';\n\nexport const useTodoList = () => {\n  const state = useTrackedState();\n  return state.todos;\n};\n")),Object(n.b)("p",null,"This is a custom hook to simply return ",Object(n.b)("inlineCode",{parentName:"p"},"todos"),"."),Object(n.b)("h2",{id:"srchooksuseaddtodojs"},"src/hooks/useAddTodo.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useCallback } from 'react';\n\nimport { useSetDraft, State } from '../store';\n\nlet nextId = 100;\n\nexport const useAddTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    title => {\n      setDraft((draft: State) => {\n        draft.todos.push({ id: nextId++, title });\n      });\n    },\n    [setDraft]\n  );\n};\n")),Object(n.b)("p",null,"This is a custom hook to return ",Object(n.b)("inlineCode",{parentName:"p"},"addTodo")," function."),Object(n.b)("h2",{id:"srchooksusechangetodojs"},"src/hooks/useChangeTodo.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useCallback } from 'react';\n\nimport { useSetDraft, State } from '../store';\n\nexport const useChangeTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number, note: string) => {\n      setDraft((draft: State) => {\n        const todo = draft.todos.find(todo => todo.id === id);\n        if (todo) todo.note = note;\n      });\n    },\n    [setDraft]\n  );\n};\n")),Object(n.b)("p",null,"This is a custom hook to return ",Object(n.b)("inlineCode",{parentName:"p"},"changeTodo")," function."),Object(n.b)("h2",{id:"srchooksuseclearallnotesjs"},"src/hooks/useClearAllNotes.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useCallback } from 'react';\n\nimport { useSetDraft, State } from '../store';\n\nexport const useClearAllNotes = () => {\n  const setDraft = useSetDraft();\n  return useCallback(() => {\n    setDraft((draft: State) => {\n      draft.todos.forEach(todo => {\n        delete todo.note;\n      });\n    });\n  }, [setDraft]);\n};\n")),Object(n.b)("p",null,"This is a custom hook to return ",Object(n.b)("inlineCode",{parentName:"p"},"clearAllNotes")," function."),Object(n.b)("h2",{id:"srchooksusedeletetodojs"},"src/hooks/useDeleteTodo.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useCallback } from 'react';\n\nimport { useSetDraft, State } from '../store';\n\nexport const useDeleteTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number) => {\n      setDraft((draft: State) => {\n        const index = draft.todos.findIndex(todo => todo.id === id);\n        if (index >= 0) draft.todos.splice(index, 1);\n      });\n    },\n    [setDraft]\n  );\n};\n")),Object(n.b)("p",null,"This is a custom hook to return ",Object(n.b)("inlineCode",{parentName:"p"},"deleteTodo")," function."),Object(n.b)("h2",{id:"srchooksusetoogletodojs"},"src/hooks/useToogleTodo.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useCallback } from 'react';\n\nimport { useSetDraft, State } from '../store';\n\nexport const useToggleTodo = () => {\n  const setDraft = useSetDraft();\n  return useCallback(\n    (id: number) => {\n      setDraft((draft: State) => {\n        const todo = draft.todos.find(todo => todo.id === id);\n        if (todo) todo.completed = !todo.completed;\n      });\n    },\n    [setDraft]\n  );\n};\n")),Object(n.b)("p",null,"This is a custom hook to return ",Object(n.b)("inlineCode",{parentName:"p"},"toggleTodo")," function."),Object(n.b)("h2",{id:"srccomponentstodolistjs"},"src/components/TodoList.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import * as React from 'react';\n\nimport { useTodoList } from '../hooks/useTodoList';\nimport { useClearAllNotes } from '../hooks/useClearAllNotes';\nimport TodoItem from './TodoItem';\nimport NewTodo from './NewTodo';\n\nconst TodoList: React.FC = () => {\n  const clearAllNotes = useClearAllNotes();\n  const todos = useTodoList();\n  return (\n    <div>\n      <ul>\n        {todos.map(({ id, title, completed, note }) => (\n          <TodoItem\n            key={id}\n            id={id}\n            title={title}\n            completed={completed}\n            note={note}\n          />\n        ))}\n        <NewTodo />\n      </ul>\n      <button onClick={clearAllNotes}>Clear all notes</button>\n    </div>\n  );\n};\n\nexport default TodoList;\n")),Object(n.b)("p",null,"This component is to show the list of ",Object(n.b)("inlineCode",{parentName:"p"},"TodoItem"),"s,\n",Object(n.b)("inlineCode",{parentName:"p"},"NewTodo")," to create a new item, and\nClear button to reset notes in all items."),Object(n.b)("h2",{id:"srccomponentstodoitemjs"},"src/components/TodoItem.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import * as React from 'react';\n\nimport { TodoType } from '../store';\nimport { useDeleteTodo } from '../hooks/useDeleteTodo';\nimport { useToggleTodo } from '../hooks/useToggleTodo';\nimport { useChangeTodo } from '../hooks/useChangeTodo';\nimport { useFlasher } from '../utils';\n\nconst TodoItem: React.FC<TodoType> = ({ id, title, completed, note }) => {\n  const deleteTodo = useDeleteTodo();\n  const toggleTodo = useToggleTodo();\n  const changeTodo = useChangeTodo();\n  return (\n    <li ref={useFlasher()}>\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => toggleTodo(id)}\n      />\n      <span\n        style={{\n          textDecoration: completed ? 'line-through' : 'none',\n        }}\n      >\n        {title}\n      </span>\n      <input\n        value={note || ''}\n        placeholder=\"Enter note...\"\n        onChange={e => changeTodo(id, e.target.value)}\n      />\n      <button onClick={() => deleteTodo(id)}>Delete</button>\n    </li>\n  );\n};\n\nexport default React.memo(TodoItem);\n")),Object(n.b)("p",null,"This is the TodoItem component.\nWe prefer primitive props for memoized components."),Object(n.b)("p",null,"If you want to use object props for memoized components,\nyou need to notify the objects by ",Object(n.b)("a",s({parentName:"p"},{href:"/docs/api#trackmemo"}),"trackMemo"),".\nSee ",Object(n.b)("a",s({parentName:"p"},{href:"https://github.com/dai-shi/react-tracked/tree/master/examples/09_reactmemo"}),"example/09")," for the usage."),Object(n.b)("h2",{id:"srccomponentsnewtodojs"},"src/components/NewTodo.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useAddTodo } from '../hooks/useAddTodo';\nimport { useFlasher } from '../utils';\n\nconst NewTodo: React.FC = () => {\n  const addTodo = useAddTodo();\n  const [text, setText] = useState('');\n  return (\n    <li ref={useFlasher()}>\n      <input\n        value={text}\n        placeholder=\"Enter title...\"\n        onChange={e => setText(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          addTodo(text);\n          setText('');\n        }}\n      >\n        Add\n      </button>\n    </li>\n  );\n};\n\nexport default React.memo(NewTodo);\n")),Object(n.b)("p",null,"This is the NewTodo component to create a new item.\nIt uses a local state for the text field."),Object(n.b)("h2",{id:"srcutilsjs"},"src/utils.js"),Object(n.b)("pre",null,Object(n.b)("code",s({parentName:"pre"},{className:"language-typescript",metastring:"ts2js",ts2js:!0}),"import { useRef, useEffect } from 'react';\n\nexport const useFlasher = () => {\n  const ref = useRef<HTMLLIElement>(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    ref.current.setAttribute(\n      'style',\n      'box-shadow: 0 0 2px 1px red; transition: box-shadow 100ms ease-out;'\n    );\n    setTimeout(() => {\n      if (!ref.current) return;\n      ref.current.setAttribute('style', '');\n    }, 300);\n  });\n  return ref;\n};\n")),Object(n.b)("p",null,"This is a util function to show which components render."),Object(n.b)("h2",{id:"codesandbox"},"CodeSandbox"),Object(n.b)("p",null,"You can try ",Object(n.b)("a",s({parentName:"p"},{href:"https://codesandbox.io/s/black-leftpad-bs43b"}),"working example"),"."))}l.isMDXComponent=!0},59:function(e,t,o){"use strict";o.d(t,"a",(function(){return c})),o.d(t,"b",(function(){return u}));var n=o(0),s=o.n(n),r=s.a.createContext({}),a=function(e){var t=s.a.useContext(r),o=t;return e&&(o="function"==typeof e?e(t):Object.assign({},t,e)),o},c=function(e){var t=a(e.components);return s.a.createElement(r.Provider,{value:t},e.children)};var i="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},l=Object(n.forwardRef)((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,i=function(e,t){var o={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(o[n]=e[n]);return o}(e,["components","mdxType","originalType","parentName"]),l=a(o),u=n,p=l[c+"."+u]||l[u]||d[u]||r;return o?s.a.createElement(p,Object.assign({},{ref:t},i,{components:o})):s.a.createElement(p,Object.assign({},{ref:t},i))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,a=new Array(r);a[0]=l;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c[i]="string"==typeof e?e:n,a[1]=c;for(var u=2;u<r;u++)a[u]=o[u];return s.a.createElement.apply(null,a)}return s.a.createElement.apply(null,o)}l.displayName="MDXCreateElement"}}]);